{"ast":null,"code":"var _jsxFileName = \"D:\\\\major-project\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchData } from \"../api/api\";\nimport Youtube from 'react-youtube';\n// import movieTrailer from \"movie-trailer\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  _s();\n  let {\n    title,\n    param\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [watch, setWatch] = useState([]);\n  useEffect(() => {\n    fetchData(param).then(res => setData(res.data.results));\n  }, []);\n\n  // const handleTrailer = (movie) =>{\n\n  //   if(trailerUrl){\n  //     setTrailerUrl(\"\")\n  //   }\n  //   else{\n  //     movieTrailer(movie?.name || \"\").then((url)=>{\n  //       const urlParams = new URLSearchParams(new URL(url).search)\n  //       setTrailerUrl(urlParams.get('v'));\n  //     }).catch(()=>{\n  //       console.log('Temporarly unavailble')\n  //     })\n  //   }\n\n  // }\n\n  const addList = item => {\n    setWatch(Ele => {\n      return [...Ele, item];\n    });\n  };\n  console.log(watch);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVar: {\n      play: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row__posters\",\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/overview/${item.id}/${item.title}`,\n            onClick: () => addList(item),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"row__poster row__posterLarge\",\n              src: `https://image.tmdb.org/t/p/original${item.poster_path}`,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Youtube, {\n        videoId: trailerUrl,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"oJnb2gplH373hKNqUjNVeX1vl+Q=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useEffect","useState","fetchData","Youtube","Link","jsxDEV","_jsxDEV","List","_ref","_s","title","param","data","setData","trailerUrl","setTrailerUrl","watch","setWatch","then","res","results","addList","item","Ele","console","log","opts","height","width","playerVar","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","to","id","onClick","src","poster_path","alt","videoId","_c","$RefreshReg$"],"sources":["D:/major-project/src/components/List.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../api/api\";\r\nimport Youtube from 'react-youtube';\r\n// import movieTrailer from \"movie-trailer\";\r\nimport { Link } from \"react-router-dom\";\r\nconst List = ({ title, param }) => {\r\n  const [data, setData] = useState([]);\r\n  const [trailerUrl,setTrailerUrl] = useState(\"\")\r\n  const [watch, setWatch] = useState([]);\r\n\r\n  \r\n  useEffect(()=>{\r\n    fetchData(param).then( res => setData(res.data.results))\r\n  },[]);\r\n \r\n\r\n  // const handleTrailer = (movie) =>{\r\n\r\n  //   if(trailerUrl){\r\n  //     setTrailerUrl(\"\")\r\n  //   }\r\n  //   else{\r\n  //     movieTrailer(movie?.name || \"\").then((url)=>{\r\n  //       const urlParams = new URLSearchParams(new URL(url).search)\r\n  //       setTrailerUrl(urlParams.get('v'));\r\n  //     }).catch(()=>{\r\n  //       console.log('Temporarly unavailble')\r\n  //     })\r\n  //   }\r\n\r\n  // }\r\n\r\n  const addList = (item) =>{\r\n      setWatch((Ele)=>{\r\n      return [...Ele,item]\r\n    })\r\n    \r\n  }\r\nconsole.log(watch)\r\n  const opts = {\r\n    height:\"390\",\r\n    width:\"100%\",\r\n    playerVar:{\r\n      play:1\r\n    }\r\n\r\n  }\r\n  return(\r\n    <div className=\"list\">\r\n      <div className=\"row\">\r\n        <h2 className=\"text-white title\">{ title }</h2>\r\n        <div className=\"col\">\r\n          <div className=\"row__posters\">\r\n            {\r\n              data.map(item => <Link to={`/overview/${item.id}/${item.title}`} onClick={()=>addList(item)}>\r\n                <img className=\"row__poster row__posterLarge\" \r\n                src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                alt={item.title}\r\n                \r\n              />\r\n              </Link>)\r\n            }\r\n          </div>\r\n        </div>\r\n        {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}></Youtube>}\r\n      </div>\r\n     \r\n    </div>\r\n     \r\n  )\r\n}\r\n\r\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}